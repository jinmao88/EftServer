// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// WeaponDao is the manager for logic model data accessing and custom defined data operations functions management.
type WeaponDao struct {
	gmvc.M               // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      weaponColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB        // DB is the raw underlying database management object.
	Table  string        // Table is the underlying table name of the DAO.
}

// WeaponColumns defines and stores column names for table weapon.
type weaponColumns struct {
	Id       string //
	FullName string //
	Name     string //
	Type     string // 武器类型 1、手枪 2、冲锋枪 3、投掷物 4、机枪 5、栓动式步枪 6、突击卡宾枪 7、突击步枪 8、精确射手步枪 9、近战武器 10、散弹枪
	Caliber  string // 子弹类型
	CreateAt string //
	UpdateAt string //
	DeleteAt string //
}

// NewWeaponDao creates and returns a new DAO object for table data access.
func NewWeaponDao() *WeaponDao {
	columns := weaponColumns{
		Id:       "id",
		FullName: "full_name",
		Name:     "name",
		Type:     "type",
		Caliber:  "caliber",
		CreateAt: "create_at",
		UpdateAt: "update_at",
		DeleteAt: "delete_at",
	}
	return &WeaponDao{
		C:     columns,
		M:     g.DB("default").Model("weapon").Safe(),
		DB:    g.DB("default"),
		Table: "weapon",
	}
}
